---
# this playbook will install and configure the chrony time sync daemon and client
# in addition it will install all turtlebot packages and configurations in the home dir

- name: install chrony
  apt:
          name: chrony
          state: present

- name: configure chrony config
  template: 
        src: chrony.conf.j2
        dest: /etc/chrony/chrony.conf
        owner: root
        group: root
        mode: 0644
  notify: restart chrony

- name: start chrony
  service:
    name: chrony
    state: started
    enabled: yes

- name: configure temp limit
  template:
    src: usercfg.txt.j2
    dest: /boot/firmware/usercfg.txt
    
- name: configure rosrc
  template:
    src: rosrc.j2
    dest: /home/turtle/.rosrc
    
- name: copy autostart.bash
  template:
    src: autostart.bash.j2
    dest: /home/turtle/autostart.bash
    
- name: configure distcc
  template:
    src:  distccrc.j2
    dest: /home/turtle/.distccrc

- name: configure bashrc
  template:
    src: bashrc.j2
    dest: /home/turtle/.bashrc

- name: Remove snapd from Ubuntu
  apt:
    name: snapd
    state: absent
    purge: yes
  when: ansible_distribution == "Ubuntu"

- name: Remove snapd-related directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /snap
    - /var/snap
    - /var/lib/snapd
    - /home/turtle/snap
  when: ansible_distribution == "Ubuntu"

- name: remove unattended unattended-upgrades
  apt:
    name: unattended-upgrades
    state: absent
    purge: yes
  
- name: install ros-pkgs
  apt:
    pkg: 
      - ros-foxy-rmw-cyclonedds-cpp
      - ros-foxy-turtlebot3-bringup
      - ros-foxy-turtlebot3-teleop
      - ros-foxy-turtlebot3-msgs
      - ros-foxy-turtlebot3-node

- name: opencr update
  shell:
    cmd: |
      rm -rf ./opencr_update.tar.bz2
      wget https://github.com/ROBOTIS-GIT/OpenCR-Binaries/raw/master/turtlebot3/ROS1/latest/opencr_update.tar.bz2
      tar -xvf opencr_update.tar.bz2
      cd opencr_update
      ./update.sh /dev/ttyACM0 burger.opencr
  tags: opencr




- name: reboot
  reboot:
    msg: "Rebooting by ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami