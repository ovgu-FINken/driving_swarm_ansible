---
- name: install chrony
  become: yes
  apt:
    name: chrony
    state: present
  tags:
    - chrony

- name: configure chrony config
  become: yes
  template: 
        src: chrony.conf.j2
        dest: /etc/chrony/chrony.conf
        owner: root
        group: root
        mode: 0644
  notify: restart chrony
  tags:
    - chrony

- name: start chrony
  become: yes
  service:
    name: chrony
    state: started
    enabled: yes
  tags:
    - chrony

- name: install zenoh sources
  become: yes
  shell: |
     echo "deb [trusted=yes] https://download.eclipse.org/zenoh/debian-repo/ /" | tee -a /etc/apt/sources.list > /dev/null

- name: install pip and other python packages
  become: yes
  apt:
    name: 
      - python3-pip
      - python3-skimage
      - python3-shapely
      - python3-termcolor
      - python3-rosdep2
      - python3-colcon-common-extensions
      - tmux
      - vim
      - htop
      - distcc
      - zenoh-bridge-ros2dds
      - ros-humble-rmw-cyclonedds-cpp
      - ros-humble-xacro
    state: present
    update_cache: yes
      
- name: pip requirements
  become: yes
  pip:
    name:
      #- git+https://github.com/ghliu/pyReedsShepp.git
      - deprecation
      #- dubins
      #- bezier


- name: set up driving swarm git
  git:
    repo: https://github.com/ovgu-FINken/driving_swarm_infrastructure.git
    dest: ~/ros/driving_swarm_infrastructure
    version: "{{ros2_distribution}}"
    accept_hostkey: yes
  tags: 
    - git


- name: configure .rosrc
  template: 
    src: rosrc.j2
    dest: ~/.rosrc
  tags:
    - rosrc


- name: add rosrc to bashrc
  lineinfile:
    path: ~/.bashrc
    line: source ~/.rosrc
  tags:
    - rosrc

- name: rosdep install
  shell: |
    source ~/.bashrc
    rosdep update --rosdistro "{{ros2_distribution}}"
    rosdep install --rosdistro "{{ros2_distribution}}" --from-paths ~/ros/driving_swarm_infrastructure/src/ -y --ignore-src {% if inventory_hostname in groups['turtlebot'] %} --skip-keys turtlebot3_gazebo {% endif %}
  tags:
    - rosdep
  
- name: build driving swarm
  become: no
  shell: |
    source /opt/ros/humble/setup.bash && source ~/.bashrc && colcon build --executor sequential
  args:
    chdir: ~/ros/driving_swarm_infrastructure
    executable: /bin/bash
  tags:
    - colcon
    - build
    - git

- name: add driving_swarm_infrastructure to rosrc
  lineinfile:
    path: ~/.rosrc
    line: source ~/ros/driving_swarm_infrastructure/install/local_setup.bash
  tags:
    - colcon
    - git
  
- name: Install systemd service for zenoh-bridge-ros2dds
  become: yes
  template:
    src: zenoh-bridge-ros2dds.service.j2
    dest: /lib/systemd/system/zenoh-bridge-ros2dds.service
    owner: root
    group: root
    mode: '0644'
  tags:
    - zenoh

- name: Ensure /etc/zenoh directory exists
  become: yes
  file:
    path: /etc/zenoh
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: 
    - zenoh


- name: Deploy zenoh config
  become: yes
  template:
    src: zenoh_config.json5.j2
    dest: /etc/zenoh/config.json5
    owner: root
    group: root
    mode: '0644'
  tags:
    - zenoh


- name: Enable and start zenoh-bridge-ros2dds
  become: yes
  service:
    name: zenoh-bridge-ros2dds
    enabled: yes
    state: started
  tags:
    - zenoh


