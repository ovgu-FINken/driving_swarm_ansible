---
- name: install chrony
  become: yes
  apt:
    name: chrony
    state: present
  tags:
    - chrony

- name: configure chrony config
  become: yes
  template: 
        src: chrony.conf.j2
        dest: /etc/chrony/chrony.conf
        owner: root
        group: root
        mode: 0644
  notify: restart chrony
  tags:
    - chrony

- name: start chrony
  become: yes
  service:
    name: chrony
    state: started
    enabled: yes
  tags:
    - chrony

# echo"deb [trusted=yes] https://download.eclipse.org/zenoh/debian-repo/ /" | sudo tee -a /etc/apt/sources.list > /dev/null
- name: Install zenoh sources
  become: yes
  apt_repository:
    repo: "deb [trusted=yes] https://download.eclipse.org/zenoh/debian-repo/ /"
    state: present

      
- name: install pip and other python packages
  become: yes
  apt:
    name: 
      - python3-pip
      - python3-skimage
      - python3-shapely
      - python3-termcolor
      - python3-rosdep2
      - python3-colcon-common-extensions
      - tmux
      - vim
      - htop
      - distcc
    state: present
      
- name: pip requirements
  become: yes
  pip:
    name:
      #- git+https://github.com/ghliu/pyReedsShepp.git
      - deprecation
      #- dubins
      #- bezier


- name: set up driving swarm git
  git:
    repo: https://github.com/ovgu-FINken/driving_swarm_infrastructure.git
    dest: ~/ros/driving_swarm_infrastructure
    version: "{{ros2_distribution}}"
    accept_hostkey: yes
  tags: 
    - git


- name: configure .rosrc
  template: 
    src: rosrc.j2
    dest: ~/.rosrc
  tags:
    - rosrc


- name: add rosrc to bashrc
  lineinfile:
    path: ~/.bashrc
    line: source ~/.rosrc
  tags:
    - rosrc

      
- name: rosdep install
  shell: |
    source ~/.bashrc
    rosdep update --rosdistro "{{ros2_distribution}}"
    rosdep install --rosdistro "{{ros2_distribution}}" --from-paths ~/ros/driving_swarm_infrastructure/src/ -y --ignore-src {% if inventory_hostname in groups['turtlebot'] %} --skip-keys turtlebot3_gazebo {% endif %}
  tags:
    - rosdep
      
- name: build driving swarm
  shell:
    cmd: |
      source ~/.bashrc && colcon build {% if inventory_hostname in groups['turtlebot'] %} --executor sequential {% endif %}
    chdir: ~/ros/driving_swarm_infrastructure
    executable: /usr/bin/bash 
  tags:
    - colcon
    - build
    - git

- name: add driving_swarm_infrastructure to rosrc
  lineinfile:
    path: ~/.rosrc
    line: source ~/ros/driving_swarm_infrastructure/install/local_setup.bash
  tags:
    - colcon
    - git

- name: Install zenoh packages
  apt:
    name: "{{ packages }}"
    update_cache: no
    allow_downgrade: yes
  become: yes
  vars:
    zenoh_version: "0.11.0-stable"
    packages:
      - zenoh={{ zenoh_version }}
      - zenoh-plugin-ros2dds={{ zenoh_version }}
      - zenoh-bridge-ros2dds={{ zenoh_version }}
      - zenohd={{ zenoh_version }}
      - zenoh-plugin-rest={{ zenoh_version }}
      - zenoh-plugin-storage-manager={{ zenoh_version }}
  tags:
    - zenoh

      
- name: install config for zenoh-bridge-dds.service
  template:
    src: zenoh.conf.j2
    dest: /etc/zenoh-bridge-ros2dds/conf.json5
    owner: root
    group: root
  become: yes
  tags:
    - zenoh
    - autostart
